name: Build and publish Docker image

on:
  push:
    branches:
      - master

jobs:
  docker-image-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: jumper/route-planner-core
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            -f ./Dockerfile \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#      - name: Push Docker image to AWS ECR Registry
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: jumper/route-planner-core
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
#
#      - name: Fill in the new image ID in the Amazon ECS task definition
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          container-name: route-planner
#          image: ${{ steps.build-image.outputs.image }}
#
#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.task-def.outputs.task-definition }}
#          service: route-planner-service
#          cluster: default
#          wait-for-service-stability: true